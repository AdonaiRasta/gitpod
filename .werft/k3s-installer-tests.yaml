# debug using `werft run github -f -s .werft/installer-tests.ts -j .werft/k3s-nightly-tests.yaml -a debug=true`
pod:
  serviceAccount: werft
  imagePullSecrets:
  - name: eu-gcr-io-pull-secret
  nodeSelector:
    dev/workload: builds
  securityContext:
    runAsUser: 0
  volumes:
  - name: sh-playground-sa-perm
    secret:
      secretName: sh-playground-sa-perm
  - name: sh-playground-dns-perm
    secret:
      secretName: sh-playground-dns-perm
  - name: deploy-key
    secret:
      secretName: deploy-key
  - name: github-ssh-key
    secret:
      secretName: github-ssh-key
      defaultMode: 0600
  containers:
  - name: build
    # This image has to be manually built and pushed see README for instructions
    image: eu.gcr.io/gitpod-dev/gitpod-com/gitpod-ci:7
    workingDir: /workspace
    imagePullPolicy: Always
    volumeMounts:
    - name: sh-playground-sa-perm
      mountPath: /mnt/secrets/sh-playground-sa-perm
    - name: GOOGLE_APPLICATION_CREDENTIALS
      mountPath: /mnt/secrets/sh-playground-sa-perm
    - name: sh-playground-dns-perm # this sa is used for the DNS management
      mountPath: /mnt/secrets/sh-playground-dns-perm
    - name: deploy-key
      mountPath: /mnt/secrets/deploy-key
      readOnly: true
    - name: github-ssh-key
      mountPath: /mnt/secrets/github-ssh-key
      readOnly: true
    env:
    # - name: GOPROXY
    #   value: http://athens-athens-proxy.athens.svc.cluster.local:9999
    - name: WERFT_HOST
      value: "werft.werft.svc.cluster.local:7777"
    - name: TF_VAR_sa_creds
      value: "/mnt/secrets/sh-playground-sa-perm/sh-sa.json"
    - name: TF_VAR_dns_creds
      value: "/mnt/secrets/sh-playground-sa-perm/sh-dns-sa.json"
    - name: WERFT_K8S_NAMESPACE
      value: "werft"
    - name: WERFT_K8S_LABEL
      value: "component=werft"
    - name: NODENAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    command:
      - bash
      - -c
      - |
        sleep 1
        set -Eeuo pipefail

        sudo chown -R gitpod:gitpod /workspace

        curl -sLS https://get.k3sup.dev | sh

        npm install shelljs semver ts-node typescript @types/shelljs @types/node @types/semver
        printf '{{ toJson . }}' > context.json

        yarn gp decrypt-secrets --keyfile /mnt/secrets/deploy-key/deploy-key

        export TF_VAR_sub_domain=$(echo $RANDOM | md5sum | head -c 5; echo)

        export DOCKER_HOST=tcp://$NODENAME:2375

        npx ts-node .werft/installer-tests.ts "STANDARD_K3S_TEST"
# The bit below makes this a cron job
# plugins:
#   cron: "15 * * * *"
